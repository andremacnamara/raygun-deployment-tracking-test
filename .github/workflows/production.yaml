name: Vercel Production Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - master

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.email "${{ github.event.head_commit.author.email }}"
          git config --global user.name "${{ github.event.head_commit.author.name }}"
          git config --global credential.helper store

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Tag Release
        id: tag_release
        run: |
          tag_name="v1.0-${GITHUB_SHA::8}"
          git tag -a $tag_name -m "Release $tag_name"
          echo "::set-output name=tag::$tag_name"
        if: success()

      - name: Push Tag
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: git push origin ${{ steps.tag_release.outputs.tag }} --force-with-lease
        if: success()

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_release.outputs.tag }}
          release_name: Release ${{ steps.tag_release.outputs.tag }}
          body: |
            Describe your release notes here.
          draft: false
          prerelease: false

      - name: Track Deployment with Raygun
        continue-on-error: true  # Allows the workflow to continue even if this step fails
        env:
          RAYGUN_PAT: ${{ matrix.environment == 'production' && secrets.RAYGUN_PAT_TOKEN || secrets.RAYGUN_PAT_TOKEN }}
          RAYGUN_API_KEY: ${{ matrix.environment == 'production' && secrets.RAYGUN_API_KEY || secrets.RAYGUN_API_KEY }}
          VERSION: ${{ steps.tag_release.outputs.tag }}
          AUTHOR_NAME: ${{ github.event.head_commit.author.name || 'Unknown Author' }}
          AUTHOR_EMAIL: ${{ github.event.head_commit.author.email || 'Unknown Email' }}
          
        run: |

          ./.github/workflows/raygun_deployment_tracking.sh \
            -t "$RAYGUN_PAT" \
            -a "$RAYGUN_API_KEY" \
            -v "$VERSION" \
            -o "$AUTHOR_NAME" \
            -e "$AUTHOR_EMAIL" \
            -n "Deployment notes" \
            -i "GitHub" \
            -s "GitHub" \
            -d "$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
