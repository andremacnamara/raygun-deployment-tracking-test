import type { Metadata } from "next";
import "./globals.css";

import Script from "next/script";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const initRaygunScript = () => {
  return {
    __html: `
      !function(a,b,c,d,e,f,g,h){a.RaygunObject=e,a[e]=a[e]||function(){
      (a[e].o=a[e].o||[]).push(arguments)},f=b.createElement(c),g=b.getElementsByTagName(c)[0],
      f.async=1,f.src=d,g.parentNode.insertBefore(f,g),h=a.onerror,a.onerror=function(b,c,d,f,g){
      h&&h(b,c,d,f,g),g||(g=new Error(b)),a[e].q=a[e].q||[],a[e].q.push({
      e:g})}}(window,document,"script","//cdn.raygun.io/raygun4js/raygun.min.js","rg4js");

      rg4js('apiKey', '${process.env.RAYGUN_API_KEY}');
      
       rg4js('onBeforeSend', function (payload) {
          let updatedPayload = payload;            
          if (payload.Details?.Error?.Message == 'Script error.') {
            const googleAdsUrls = ["doubleclick.net", "googlesyndication.com", "adsensecustomsearchads.com"];
            if (!!payload.Details.Error.StackTrace) {
              if (payload.Details.Error.StackTrace.some(frame => googleAdsUrls.some(url => frame.FileName.includes(url)))) {
                updatedPayload.Details.Error.Message = "An error occurred while loading an ad.";
              }
            }
          }
          return updatedPayload;
      });      
      `,
  };
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body>
        <div>Hello again</div>
        {children}
        <Script
          id="raygun"
          dangerouslySetInnerHTML={initRaygunScript()}
          crossOrigin={"anonymous"}
        />
      </body>
    </html>
  );
}
